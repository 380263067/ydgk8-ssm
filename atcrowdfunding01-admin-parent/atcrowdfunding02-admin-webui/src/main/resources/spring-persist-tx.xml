<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--在这个配置文件中进行事务的配置-->
    <!--配置事务管理器-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--将数据源交给事务管理器管理-->
        <property name="dataSource" value="#{dataSource}"></property>
    </bean>

    <!--配置切点表达式-->
    <aop:config>
        <aop:pointcut id="pointCut" expression="execution(* com.ydgk.crowd.service.impl.*.*(..))"></aop:pointcut>
        <!--事务的属性和事务的切入点关联起来-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"></aop:advisor>
    </aop:config>

    <!-- 配置事务通知 -->
    <!-- id 属性用于在 aop:advisor 中引用事务通知 -->
    <!-- transaction-manager 属性用于引用事务管理器，如果事务管理器的 bean 的 id 正好是
    transactionManager，可以省略这个属性 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!-- name 属性指定当前要配置的事务方法的方法名 -->
            <!-- 查询的方法通常设置为只读，便于数据库根据只读属性进行相关性能优化 -->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>
            <!-- 增删改方法另外配置 -->
            <!-- propagation 属性配置事务方法的传播行为 -->
            <!-- 默认值：REQUIRED 表示：当前方法必须运行在事务中，如果没有事务，则开
            启事务，在自己的事务中运行。如果已经有了已开启的事务，则在当前事务中运行。有可能
            和其他方法共用同一个事务。 -->
            <!-- 建议值：REQUIRES_NEW 表示：当前方法必须运行在事务中，如果没有事务，
            则开启事务，在自己的事务中运行。和 REQUIRED 的区别是就算现在已经有了已开启的事务，
            也一定要开启自己的事务，避免和其他方法共用同一个事务。 -->
            <!-- rollback-for 属性配置回滚的异常 -->
            <!-- 默认值：运行时异常 -->
            <!-- 建议值：编译时异常+运行时异常 -->
            <tx:method name="save*" propagation="REQUIRES_NEW"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="remove*" propagation="REQUIRES_NEW"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRES_NEW"
                       rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

</beans>